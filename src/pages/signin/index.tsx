import Head from "next/head";
import { useEffect, useState } from "react";
import { auth } from "../../firebase";
import { useRouter } from "next/router";

const SignIn = () => {
  const [email, setEmail] = useState("");
  const [errorResponse, setErrorResponse] = useState("");
  const [notification, setNotification] = useState("");
  const [loggedIn, setLoggedIn] = useState(false);
  const router = useRouter();

  useEffect(() => {
    setEmail(window.localStorage.getItem("email") || "");
  }, []);

  useEffect(() => {
    if (loggedIn == true) {
      router.push("/success");
    }
  }, [loggedIn]);

  useEffect(() => {
    const saved_email = window.localStorage.getItem("email");

    if (auth.isSignInWithEmailLink(window.location.href) && !!saved_email) {
      auth.signInWithEmailLink(saved_email, window.location.href);
    }
  }, []);

  const clearError = () => {
    if (errorResponse != "") {
      setErrorResponse("");
    }
  };

  const clearNotification = () => {
    if (notification != "") {
      setNotification("");
    }
  };

  const handleEmail = (event) => {
    clearError();
    clearNotification();
    setEmail(event.target.value);
  };

  const trySignIn = async () => {
    if (auth.isSignInWithEmailLink(window.location.href) && !!email) {
      auth.signInWithEmailLink(email, window.location.href).catch((err) => {
        switch (err.code) {
          case "auth/quota-exceeded":
            setErrorResponse("Exceeded daily quota for email sign-in");
            break;
          default:
            setErrorResponse("An unknown error has occured");
        }
      });
      console.log("---setting log in-----");
      setLoggedIn(true);
    } else {
      auth
        .sendSignInLinkToEmail(email, {
          url: "http://localhost:3000/signin",
          handleCodeInApp: true,
        })
        .then(() => {
          window.localStorage.setItem("email", email);
          setNotification("Email link sent. Check your email inbox.");
        })
        .catch((err) => {
          switch (err.code) {
            case "auth/quota-exceeded":
              setErrorResponse("Exceeded daily quota for email sign-in");
              break;
            default:
              setErrorResponse("An unknown error has occured");
          }
        });
    }
  };

  return (
    <>
      <Head>
        <title>Sign In</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
        <div className="flex-container">
          <h1>Sign in with email link</h1>
          <input
            type="text"
            value={email}
            style={{ borderRadius: "5px", width: "200px" }}
            placeholder="email"
            onChange={handleEmail}
          />
          <button onClick={trySignIn} style={{ borderRadius: "5px" }}>
            Sign in
          </button>
          <div className="error_response">{errorResponse}</div>
          <div className="notification">{notification}</div>
        </div>
      </main>
    </>
  );
};

export default SignIn;
